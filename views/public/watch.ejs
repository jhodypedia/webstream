<section class="watch-page">
  <div class="player-container">
    <div class="video-box">
      <video id="player" preload="metadata" playsinline></video>

      <!-- Overlay -->
      <div id="overlay" class="overlay">
        <button id="playBtn" class="play-btn">
          <svg viewBox="0 0 24 24"><path fill="white" d="M8 5v14l11-7z"/></svg>
        </button>
      </div>

      <!-- Custom Controls -->
      <div id="controls" class="controls hidden">
        <div class="progress-bar"><div id="progress"></div></div>
        <div class="buttons">
          <button id="pauseBtn" class="ctrl-btn">
            <svg viewBox="0 0 24 24"><path fill="white" d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/></svg>
          </button>
          <button id="fullscreenBtn" class="ctrl-btn">
            <svg viewBox="0 0 24 24"><path fill="white" d="M4 4h7v2H6v5H4V4zm10 0h6v7h-2V6h-4V4zM4 13h2v5h5v2H4v-7zm14 0h2v7h-7v-2h5v-5z"/></svg>
          </button>
        </div>
      </div>
    </div>

    <div class="video-meta">
      <h1><%= video.title %></h1>
      <div class="meta-stats">
        <span>üëÅÔ∏è <%= video.views %> views</span>
        <span>‚Ä¢</span>
        <span><%= new Date(video.createdAt).toLocaleDateString('id-ID') %></span>
      </div>
      <% if (video.description) { %>
        <p class="description"><%= video.description %></p>
      <% } %>
    </div>
  </div>
</section>

<script>
(function(){
  const src = '<%= video.hls_master_url %>';
  const video = document.getElementById('player');
  const overlay = document.getElementById('overlay');
  const playBtn = document.getElementById('playBtn');
  const pauseBtn = document.getElementById('pauseBtn');
  const fullscreenBtn = document.getElementById('fullscreenBtn');
  const controls = document.getElementById('controls');
  const progress = document.getElementById('progress');
  let hideTimeout;

  // HLS.js setup
  if (Hls.isSupported()) {
    const hls = new Hls({ maxBufferLength: 30 });
    hls.loadSource(src);
    hls.attachMedia(video);
  } else if (video.canPlayType('application/vnd.apple.mpegurl')) {
    video.src = src;
  }

  // Controls visibility
  function showControls() {
    controls.classList.remove('hidden');
    clearTimeout(hideTimeout);
    hideTimeout = setTimeout(()=>controls.classList.add('hidden'), 2500);
  }

  // Toggle play/pause
  video.addEventListener('click', ()=>{
    if(video.paused) { video.play(); overlay.classList.add('hide'); }
    else { video.pause(); overlay.classList.remove('hide'); }
    showControls();
  });

  playBtn.onclick = ()=>{
    overlay.classList.add('hide');
    video.play();
    showControls();
  };
  pauseBtn.onclick = ()=>{
    video.pause();
    overlay.classList.remove('hide');
  };
  fullscreenBtn.onclick = ()=>{
    if (!document.fullscreenElement) video.requestFullscreen();
    else document.exitFullscreen();
  };
  video.addEventListener('timeupdate', ()=>{
    progress.style.width = (video.currentTime / video.duration * 100) + '%';
  });
  document.addEventListener('mousemove', showControls);

  // Count view
  fetch('/api/videos/view/<%= video.id %>', { method:'POST' });
})();
</script>
