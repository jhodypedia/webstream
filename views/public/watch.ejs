<section class="watch-page">
  <div class="player-container">
    <div class="video-box">
      <video id="player" preload="metadata" playsinline></video>
      <div class="overlay" id="overlay">
        <button id="playBtn" class="play-btn"><i class="fa-solid fa-play"></i></button>
      </div>

      <div class="controls hidden" id="controls">
        <div class="progress-bar" id="progressBar"><div id="progress"></div></div>
        <div class="ctrl-row">
          <div class="ctrl-left">
            <button id="playCtrl" class="ctrl-btn"><i class="fa-solid fa-play"></i></button>
            <div class="volume">
              <i id="volIcon" class="fa-solid fa-volume-high"></i>
              <input id="volume" type="range" min="0" max="1" step="0.05" value="1">
            </div>
          </div>
          <div class="ctrl-right">
            <button id="fullscreenBtn" class="ctrl-btn"><i class="fa-solid fa-expand"></i></button>
          </div>
        </div>
      </div>
    </div>

    <div class="video-meta">
      <h1><%= video.title %></h1>
      <div class="meta-stats">
        üëÅÔ∏è <span id="views"><%= video.views %></span> views ‚Ä¢
        <span><%= new Date(video.createdAt).toLocaleDateString('id-ID') %></span>
      </div>
      <p class="description"><%= video.description %></p>
    </div>
  </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/hls.js@latest"></script>
<script src="https://kit.fontawesome.com/a2d9b09d5b.js" crossorigin="anonymous"></script>
<script>
(function(){
  const v = document.getElementById('player'),
        overlay = document.getElementById('overlay'),
        playBtn = document.getElementById('playBtn'),
        playCtrl = document.getElementById('playCtrl'),
        volume = document.getElementById('volume'),
        volIcon = document.getElementById('volIcon'),
        fullscreen = document.getElementById('fullscreenBtn'),
        progress = document.getElementById('progress'),
        progressBar = document.getElementById('progressBar'),
        controls = document.getElementById('controls');

  const src = '<%= video.hls_master_url %>';
  if (Hls.isSupported()) { const h = new Hls(); h.loadSource(src); h.attachMedia(v); }
  else if (v.canPlayType('application/vnd.apple.mpegurl')) v.src = src;

  const togglePlay=()=>v.paused?v.play():v.pause();
  [playBtn, playCtrl, overlay].forEach(el=>el.onclick=togglePlay);

  v.addEventListener('play',()=>{playBtn.innerHTML=playCtrl.innerHTML='<i class="fa-solid fa-pause"></i>';overlay.classList.add('hide');});
  v.addEventListener('pause',()=>{playBtn.innerHTML=playCtrl.innerHTML='<i class="fa-solid fa-play"></i>';overlay.classList.remove('hide');});

  volume.addEventListener('input',e=>{
    v.volume=e.target.value;
    volIcon.className = e.target.value==0 ? 'fa-solid fa-volume-xmark' :
      (e.target.value<0.5?'fa-solid fa-volume-low':'fa-solid fa-volume-high');
  });

  v.addEventListener('timeupdate',()=>{
    progress.style.width = (v.currentTime/v.duration)*100+'%';
  });
  progressBar.addEventListener('click',e=>{
    const r=progressBar.getBoundingClientRect();
    v.currentTime=((e.clientX-r.left)/r.width)*v.duration;
  });

  fullscreen.onclick=()=>{
    if(!document.fullscreenElement) v.parentElement.requestFullscreen();
    else document.exitFullscreen();
  };

  // Auto hide controls
  let timer;
  document.addEventListener('mousemove',()=>{
    controls.classList.remove('hidden');
    clearTimeout(timer);
    timer=setTimeout(()=>controls.classList.add('hidden'),2500);
  });

  fetch('/api/videos/view/<%= video.id %>',{method:'POST'})
    .then(()=>document.getElementById('views').textContent=parseInt(document.getElementById('views').textContent||0)+1);
})();
</script>
